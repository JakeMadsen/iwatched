<div id="profile_section" class="container">

    <div class="settings-card" style="margin-bottom:24px;">
        <h2>Tier Status</h2>
        <div class="row">
            <div class="col-md-12">
                <p style="margin:0 0 8px;">Your current plan: <strong><span id="account_plan">Free</span></strong></p>
                <div>
                    <button type="button" class="btn btn-outline-primary btn-sm" id="upgrade_btn">Upgrade to Premium</button>
                </div>
            </div>
        </div>
    </div>

    <div class="settings-card" style="margin-bottom:24px;">
        <h2>Active Sessions</h2>
        <div class="d-flex align-items-center justify-content-between" style="margin-top:-6px;">
            <p class="text mb-0">See where you're logged in and sign out of other devices.</p>
            <button class="btn btn-sm btn-dark" id="sessions_toggle_btn" aria-expanded="false" title="Expand/collapse"><i class="fas fa-chevron-down"></i></button>
        </div>
        <div id="sessions_body" style="display:none;">
        <div class="table-responsive">
            <table class="table table-sm" style="color: #ffff;">
                <thead>
                    <tr >
                        <th >Device / Browser</th>
                        <th>IP</th>
                        <th >Location</th>
                        <th >Last Seen</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="sessions_table" style="color: #ffff;">
                    <tr><td colspan="5" class="text">Loading sessionsâ€¦</td></tr>
                </tbody>
            </table>
        </div>
        <button class="btn btn-secondary btn-sm" id="logout_others_btn">Log out other sessions</button>
        </div>
    </div>

    <!-- Site preferences / Quick Actions visibility + future theme toggle -->
    <div class="settings-card" style="margin-bottom:24px;">
        <div class="d-flex align-items-center justify-content-between">
            <h2 class="mb-0">Site Preferences</h2>
            <button class="btn btn-sm btn-dark" id="site_prefs_toggle_btn" aria-expanded="false" title="Expand/collapse"><i class="fas fa-chevron-down"></i></button>
        </div>
        <div id="site_prefs_body" style="display:none;">
        <p class="text" style="margin-top:-6px;">Tweak UI behavior. Quick Actions are the Watched, Favourite and Bookmark buttons on posters.</p>
        <form id="site_prefs_form" action="/<%= user._id %>/settings" method="POST">
            <input type="hidden" name="pref_show_quick_actions" value="0">
            <div style="margin:8px 0 12px; display:flex; align-items:center; gap:10px;">
                <input type="checkbox" id="pref_show_quick_actions" name="pref_show_quick_actions" value="1" <%= (user && user.profile && user.profile.preferences && user.profile.preferences.show_quick_actions) ? 'checked' : '' %> />
                <label for="pref_show_quick_actions" style="margin:0;">Always show Quick Actions</label>
            </div>

            <input type="hidden" name="pref_hide_watched_in_search" value="0">
            <div style="margin:8px 0 12px; display:flex; align-items:center; gap:10px;">
                <input type="checkbox" id="pref_hide_watched_in_search" name="pref_hide_watched_in_search" value="1" <%= (user && user.profile && user.profile.preferences && user.profile.preferences.hide_watched_in_search) ? 'checked' : '' %> />
                <label for="pref_hide_watched_in_search" style="margin:0;">Hide movies/shows I've already watched in search results</label>
            </div>

            <div style="opacity:.6; pointer-events:none; margin:10px 0 6px;">
                <div style="font-weight:600; margin-bottom:4px;">Theme (coming soon)</div>
                <div style="display:flex; align-items:center; gap:18px;">
                    <label style="margin:0;">
                        <input type="radio" name="pref_theme" value="dark" disabled> Dark
                    </label>
                    <label style="margin:0;">
                        <input type="radio" name="pref_theme" value="light" disabled> Light
                    </label>
                    <label style="margin:0;">
                        <input type="radio" name="pref_theme" value="system" disabled checked> System
                    </label>
                    <small class="text-muted" style="margin-left:6px;">To be added</small>
                </div>
            </div>

            <button type="submit" class="btn btn-primary btn-sm">Save Preferences</button>
        </form>
        </div>
    </div>

    <div class="settings-card">
    <div class="d-flex align-items-center justify-content-between">
        <h2 class="mb-0">Profile Settings</h2>
        <button class="btn btn-sm btn-dark" id="profile_settings_toggle_btn" aria-expanded="false" title="Expand/collapse"><i class="fas fa-chevron-down"></i></button>
    </div>
    <div id="profile_settings_body" style="display:none;">

    <form action="/<%= user._id %>/settings" method="POST" encType="multipart/form-data">
        
        <!-- Images -->
        <div class="row">
            <div class="col-md-6">
                <div class="profile-picture">
                    <label for="profile-picture-file">Profile Picture</label>
                    <div class="profile-picture-file">
                        <input name="profilePictureFile" type="file" id="profilePictureFile">
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="profile-banner">
                    <label for="profile-banner-file">Banner Image</label>
                    <div class="profile-banner-file">
                        <input type="hidden" value="<%= user._id %>">
                        <input name="profileBannerFile" type="file" id="profileBannerFile">
                    </div>
                </div>
            </div>
        </div>

        <!-- Featured badge -->
        <div class="row" style="margin-top:10px;">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="featured_badge">Featured Badge</label>
                    <select class="form-control" id="featured_badge" name="featured_badge">
                        <% var currentFeatured = (user.profile && user.profile.featured_badge_id) ? String(user.profile.featured_badge_id) : ''; %>
                        <option value="">None</option>
                        <% (page_data.badges||[]).forEach(function(b){ %>
                            <option value="<%= b.id %>" data-icon="<%= b.icon || '' %>" <%= currentFeatured===String(b.id)?'selected':'' %>><%= b.title %><%= (b.level && b.level!=='single') ? (' ('+b.level+')') : '' %></option>
                        <% }) %>
                    </select>
                    <small class="form-text text-muted">Choose a badge to display next to your handle across the site.</small>
                    <div style="margin-top:8px;">
                      <img id="featured_badge_preview" src="" style="display:none;width:28px;height:28px;object-fit:contain;" alt="Featured badge preview">
                    </div>
                </div>
            </div>
        </div>

        <hr>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="user_username">Username</label>
                    <input type="text" class="form-control" id="user_username" aria-describedby="usernameHelp"
                        value="<%= user.local.username %>" readonly disabled>
                    <small id="usernamelHelp" class="form-text text-muted">Username cannot be changed</small>
                </div>

                <div class="form-group">
                    <label for="user_email">Email</label>
                    <input name="email" type="email" class="form-control" id="user_email" value="<%= user.local.email %>">
                </div>

                <div class="form-group">
                    <label for="user_password">Password</label>
                    <input name="password" type="password" class="form-control" id="user_password" value="">
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="user_custom_url">Custom URL</label>
                    <input name="custom_url" type="text" class="form-control" id="user_custom_url" aria-describedby="user_custom_urlHelp"
                        value="<%= user.profile.custom_url %>" >
                    <small id="user_custom_urlHelp" class="form-text text-muted">Add a custom url to easily share your profile with friends.</small>
                </div>

                <div class="form-group">
                    <label for="editor_email">Birthday</label>
                    <input name="birthday" type="date" class="form-control" id="editor_name" value="<%= user.profile.birthday %>">
                </div>

                <div class="form-group">
                    <label for="user_password_confirm">Confirm Password</label>
                    <input name="password_confirm" type="password" class="form-control" id="user_password_confirm"
                        value="">
                </div>

                <div class="form-group">
                    <label for="profile_visibility">Profile Visibility</label>
                    <select class="form-control" id="profile_visibility" name="visibility">
                        <option value="public" <%= (user.profile.visibility === 'public') ? 'selected' : '' %>>Public</option>
                        <option value="friends" <%= (user.profile.visibility === 'friends') ? 'selected' : '' %>>Friends only</option>
                        <option value="private" <%= (user.profile.visibility === 'private') ? 'selected' : '' %>>Private</option>
                    </select>
                    <small class="form-text text-muted">Control who can view your profile and activity.</small>
                </div>
            </div>
        </div>

        <!-- Description -->
        <div class="form-group">
            <label for="editor_description">Profile Description</label>
            <textarea name="description" rows="6" class="form-control" id="editor_description" placeholder=""><%= user.profile.description %></textarea>
        </div>

        <button type="submit" class="btn btn-primary">Update Settings</button>
    </form>
    </div>
    
    <script>
        var password = document.getElementById("user_password")
            , confirm_password = document.getElementById("user_password_confirm");

        function validatePassword() {
            if (password.value != confirm_password.value) {
                confirm_password.setCustomValidity("Passwords Don't Match");
            } else {
                confirm_password.setCustomValidity('');
            }
        }

        password.onchange = validatePassword;
        confirm_password.onkeyup = validatePassword;
    </script>
    <script>
      (function(){
        function updatePreview(){
          try {
            var sel = document.getElementById('featured_badge');
            var opt = sel && sel.options[sel.selectedIndex];
            var icon = opt ? (opt.getAttribute('data-icon')||'') : '';
            var img = document.getElementById('featured_badge_preview');
            if (!img) return;
            if (icon) { img.src = icon; img.style.display='inline-block'; }
            else { img.style.display='none'; img.src=''; }
          } catch(_){}
        }
        document.addEventListener('DOMContentLoaded', function(){
          var sel = document.getElementById('featured_badge');
          if (sel){ sel.addEventListener('change', updatePreview); updatePreview(); }
        });
      })();
    </script>
    </div>
<script>
(function(){
  // Attach AJAX submit for site preferences
  document.addEventListener('DOMContentLoaded', function(){
    try {
      var form = document.getElementById('site_prefs_form');
      if(!form) return;
      form.addEventListener('submit', function(e){
        try { e.preventDefault(); } catch(_){ }
        var showQA = !!document.getElementById('pref_show_quick_actions').checked;
        var hideWatched = !!document.getElementById('pref_hide_watched_in_search').checked;
        fetch(form.getAttribute('action') + '?ajax=1', {
          method:'POST',
          headers:{ 'Content-Type':'application/json', 'Accept':'application/json', 'X-Requested-With':'XMLHttpRequest' },
          body: JSON.stringify({ pref_show_quick_actions: showQA ? '1':'0', pref_hide_watched_in_search: hideWatched ? '1':'0' })
        }).then(function(r){ return r.json(); }).then(function(){
          try { if (!window.SITE_PREFS) window.SITE_PREFS = {}; SITE_PREFS.showQuickActions = showQA; SITE_PREFS.hideWatchedInSearch = hideWatched; } catch(_){}
          try { var cls = document.body.classList; if(showQA) cls.add('pref-show-quick-actions'); else cls.remove('pref-show-quick-actions'); } catch(_){}
          try { if (window.showToast) showToast('Preferences have been applied','success'); } catch(_){}
        }).catch(function(){ try { if (window.showToast) showToast('Failed to save preferences','warning'); } catch(_){} });
      });
    } catch(_){}
  });
})();
</script>

<script>
  (function(){
    function fmtDate(d){ try { var dt = new Date(d); return dt.toLocaleString(); } catch(e) { return ''; } }
    function parseUA(ua){
      try {
        ua = String(ua||'');
        // Browser
        var browser = 'Browser';
        var ver = '';
        var m;
        if ((m = ua.match(/Edg(?:e|A|iOS)?\/([\d\.]+)/))) { browser = 'Edge'; ver = m[1]; }
        else if ((m = ua.match(/OPR\/([\d\.]+)/))) { browser = 'Opera'; ver = m[1]; }
        else if ((m = ua.match(/Firefox\/([\d\.]+)/))) { browser = 'Firefox'; ver = m[1]; }
        else if ((m = ua.match(/Chrome\/([\d\.]+)/)) && !/Chromium/i.test(ua)) { browser = 'Chrome'; ver = m[1]; }
        else if ((m = ua.match(/Version\/([\d\.]+).*Safari\//))) { browser = 'Safari'; ver = m[1]; }
        else if (/Safari\//.test(ua)) { browser = 'Safari'; }

        // OS (coarse)
        var os = 'Unknown OS';
        if (/Windows NT 10\.0/.test(ua)) os = 'Windows 10/11';
        else if (/Windows NT 6\.3/.test(ua)) os = 'Windows 8.1';
        else if (/Windows NT 6\.2/.test(ua)) os = 'Windows 8';
        else if (/Windows NT 6\.1/.test(ua)) os = 'Windows 7';
        else if (/Android\s([\d\.]+)/.test(ua)) os = 'Android ' + (ua.match(/Android\s([\d\.]+)/)||[])[1];
        else if (/iPhone|iPad|iPod/.test(ua)) os = 'iOS';
        else if (/Mac OS X\s([\d_]+)/.test(ua)) os = 'macOS ' + (ua.match(/Mac OS X\s([\d_]+)/)||[])[1].replace(/_/g,'.');
        else if (/Linux/.test(ua)) os = 'Linux';

        return browser + (ver?(' '+ver):'') + ' â€” ' + os;
      } catch (_) { return String(ua||''); }
    }

    function renderSessions(data){
      var tbody = document.getElementById('sessions_table');
      if(!tbody) return;
      var rows = '';
      var list = (data.sessions||[]).filter(function(s){ return !!(s && (s.current || s.active)); });
      list.forEach(function(s){
        var loc = (s.geo && (s.geo.city||s.geo.region||s.geo.country)) ? [s.geo.city, s.geo.region, s.geo.country].filter(Boolean).join(', ') : '-';
        var ua = parseUA(s.user_agent||'');
        var badge = s.current ? '<span class="badge badge-success">Current</span>' : (s.active?'<span class="badge badge-info">Active</span>':'<span class="badge badge-secondary">Offline</span>');
        var action = s.current ? '' : '<button class="btn btn-link btn-sm js-revoke" data-sid="'+s.sid+'">Log out</button>';
        rows += '<tr>'+
          '<td style="max-width:320px;word-break:break-word;">'+ (ua||'Unknown') +' '+badge+'</td>'+
          '<td>'+(s.ip||'-')+'</td>'+
          '<td>'+loc+'</td>'+
          '<td>'+fmtDate(s.last_seen_at)+'</td>'+
          '<td>'+action+'</td>'+
        '</tr>';
      });
      if (!rows) rows = '<tr><td colspan="5" class="text-muted">No sessions found.</td></tr>';
      tbody.innerHTML = rows;
    }
    function loadSessions(){
      fetch('/api/v1/user/sessions')
        .then(function(r){ return r.json(); })
        .then(function(d){
          try {
            document.getElementById('account_plan').textContent = (d.plan||'free').toString().replace(/^./, function(c){ return c.toUpperCase(); });
          } catch(e){}
          renderSessions(d);
        })
        .catch(function(){
          var tbody = document.getElementById('sessions_table');
          if(tbody) tbody.innerHTML = '<tr><td colspan="5" class="text-muted">Failed to load sessions.</td></tr>';
        });
    }
    document.addEventListener('click', function(e){
      var btn = e.target.closest('.js-revoke');
      if(btn){
        var sid = btn.getAttribute('data-sid');
        fetch('/api/v1/user/sessions/revoke', { method: 'POST', headers: { 'Content-Type':'application/json' }, body: JSON.stringify({ sid: sid }) })
          .then(function(){ loadSessions(); window.showToast && showToast('Session logged out','warning'); });
      }
    });
    var loBtn = document.getElementById('logout_others_btn');
    if(loBtn){ loBtn.addEventListener('click', function(){
      fetch('/api/v1/user/sessions/revoke_others', { method:'POST' })
        .then(function(){ loadSessions(); window.showToast && showToast('Other sessions logged out','warning'); });
    }); }

    // Collapsible sessions (default closed, lazy load on first open)
    var sessionsLoaded = false;
    var toggleBtn = document.getElementById('sessions_toggle_btn');
    var sessBody = document.getElementById('sessions_body');
    if(toggleBtn && sessBody){
      toggleBtn.setAttribute('aria-expanded','false');
      toggleBtn.addEventListener('click', function(){
        var open = (sessBody.style.display !== 'none');
        if(open){
          sessBody.style.display = 'none';
          toggleBtn.setAttribute('aria-expanded','false');
          try { toggleBtn.querySelector('i').className = 'fas fa-chevron-down'; } catch(_){ }
        } else {
          sessBody.style.display = '';
          toggleBtn.setAttribute('aria-expanded','true');
          try { toggleBtn.querySelector('i').className = 'fas fa-chevron-up'; } catch(_){ }
          if(!sessionsLoaded){ sessionsLoaded = true; loadSessions(); }
        }
      });
    }

    // Toggle Site Preferences
    try {
      var spBtn = document.getElementById('site_prefs_toggle_btn');
      var spBody = document.getElementById('site_prefs_body');
      if (spBtn && spBody){
        spBtn.setAttribute('aria-expanded','false');
        spBtn.addEventListener('click', function(){
          var open = (spBody.style.display !== 'none');
          if(open){ spBody.style.display='none'; spBtn.setAttribute('aria-expanded','false'); try{ spBtn.querySelector('i').className='fas fa-chevron-down'; }catch(_){} }
          else { spBody.style.display=''; spBtn.setAttribute('aria-expanded','true'); try{ spBtn.querySelector('i').className='fas fa-chevron-up'; }catch(_){} }
        });
      }
    } catch(_){}

    // Toggle Profile Settings
    try {
      var psBtn = document.getElementById('profile_settings_toggle_btn');
      var psBody = document.getElementById('profile_settings_body');
      if (psBtn && psBody){
        psBtn.setAttribute('aria-expanded','false');
        psBtn.addEventListener('click', function(){
          var open = (psBody.style.display !== 'none');
          if(open){ psBody.style.display='none'; psBtn.setAttribute('aria-expanded','false'); try{ psBtn.querySelector('i').className='fas fa-chevron-down'; }catch(_){} }
          else { psBody.style.display=''; psBtn.setAttribute('aria-expanded','true'); try{ psBtn.querySelector('i').className='fas fa-chevron-up'; }catch(_){} }
        });
      }
    } catch(_){}
  })();
</script>

<div class="modal fade" id="recommendModal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Recommend to a Friend</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div style="margin-bottom:8px; opacity:.9;" id="recommend_context"></div>
        <div class="form-group">
          <label for="recommendTo">Friend(s) (@username or custom URL)</label>
          <div id="recommend_tokens" class="form-control" style="min-height: 38px; display:flex; flex-wrap:wrap; align-items:center; gap:6px;">
            <div id="recommend_token_input_wrap" style="flex:1; min-width: 160px;">
              <input type="text" id="recommendTo" placeholder="Type @username, press Enter. Add multiple." style="border:0; outline:0; width:100%; background:transparent; color:#e0e0e0;" autocomplete="off">
            </div>
          </div>
          <div id="recommend_suggest" class="dropdown-menu" style="display:none; position: static; max-height:220px; overflow:auto; width:100%;"></div>
          <small class="form-text text-muted">Only your friends are eligible. Start with @ and type to search. You can add several recipients.</small>
        </div>
        <div class="form-group">
          <label for="recommendNote">Message (optional)</label>
          <textarea class="form-control" id="recommendNote" rows="2" placeholder="Add a short note..."></textarea>
        </div>
        <div class="alert alert-secondary" role="alert" id="recommend_copied_msg" style="display:none; margin-bottom:0;">
          Link copied to clipboard.
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-success" id="sendRecommendation" disabled>Send recommendation</button>
      </div>
    </div>
  </div>
</div>

<script>
(function(){
  function slugify(s){ return String(s||'').toLowerCase().replace(/[^a-z0-9]+/g,'-').replace(/^-+|-+$/g,'').substring(0,80); }
  function buildLink(){
    var modal = document.getElementById('recommendModal');
    var type = modal.getAttribute('data-content-type') || '';
    var id = modal.getAttribute('data-content-id') || '';
    var title = modal.getAttribute('data-content-title') || '';
    if(!type || !id) return location.href;
    var slug = slugify(title);
    var path = type === 'movie' ? '/movies/' + id + (slug?('-'+slug):'') : '/shows/' + id + (slug?('-'+slug):'');
    return location.origin + path + '?via=recommend';
  }
  $('#recommendModal').on('show.bs.modal', function (event) {
    var button = $(event.relatedTarget);
    var type = button.data('content-type');
    var id = button.data('content-id');
    var title = button.data('content-title');
    var modal = $(this);
    modal.attr('data-content-type', type);
    modal.attr('data-content-id', id);
    modal.attr('data-content-title', title||'');
    modal.find('#recommend_context').text('You are sharing "' + (title||'') + '"');
    modal.find('#recommend_copied_msg').hide();
    try { window.__rec_init && window.__rec_init(); } catch(_){}
  });
  // Removed Copy share link button

  // Multi-recipient mentions and send logic
  (function(){
    var viewerId = <%- JSON.stringify(typeof user != 'undefined' ? String(user._id) : '') %>;
    var userKey  = <%- JSON.stringify(typeof user != 'undefined' && user.permissions ? String(user.permissions.user_private_key) : '') %>;
    var friends = [];
    var selected = new Map(); // id -> {id, username, slug}
    var input = document.getElementById('recommendTo');
    var suggest = document.getElementById('recommend_suggest');
    var tokens = document.getElementById('recommend_tokens');
    var sendBtn = document.getElementById('sendRecommendation');

    function renderTokens(){
      // remove all existing chips except input wrapper
      Array.from(tokens.querySelectorAll('.chip')).forEach(function(n){ n.parentNode.removeChild(n); });
      selected.forEach(function(u){
        var d = document.createElement('span'); d.className='chip badge badge-secondary'; d.style.cssText='display:inline-flex;align-items:center;gap:6px;padding:.35rem .5rem;';
        d.textContent='@'+(u.slug||u.username||'user');
        var x = document.createElement('a'); x.href='#'; x.textContent='Ã—'; x.style.color='#ddd'; x.style.marginLeft='6px'; x.addEventListener('click', function(e){ e.preventDefault(); selected.delete(u.id); renderTokens(); updateSendEnabled(); });
        d.appendChild(x); tokens.insertBefore(d, document.getElementById('recommend_token_input_wrap'));
      });
    }
    function hideSuggest(){ suggest.style.display='none'; suggest.innerHTML=''; }
    function showSuggest(items){
      if(!items || !items.length){ hideSuggest(); return; }
      suggest.innerHTML='';
      items.slice(0,8).forEach(function(u){
        var a = document.createElement('a'); a.className='dropdown-item'; a.href='#';
        a.textContent = (u.username ? ('@'+u.username) : '') + (u.slug ? (' ('+u.slug+')') : '');
        a.addEventListener('click', function(e){ e.preventDefault(); selected.set(String(u.id), u); renderTokens(); hideSuggest(); input.value=''; input.focus(); updateSendEnabled(); });
        suggest.appendChild(a);
      });
      suggest.style.display='block';
    }
    function filterFriends(q){
      q = String(q||'').trim().toLowerCase();
      if(!q) return [];
      // starts-with on username or slug
      return friends.filter(function(u){
        var un = (u.username||'').toLowerCase(); var sl = (u.slug||'').toLowerCase();
        return (un && un.indexOf(q)===0) || (sl && sl.indexOf(q)===0);
      });
    }
    function updateSendEnabled(){ sendBtn.disabled = !(viewerId && userKey && selected.size>0); }

    if (viewerId && !window.__rec_friends_loading){
      window.__rec_friends_loading = true;
      fetch('/api/v1/friends/list/' + viewerId)
        .then(function(r){ return r.ok ? r.json() : { friends: [] }; })
        .then(function(data){ friends = (data && data.friends) || []; })
        .catch(function(){ friends = []; });
    }

    input.addEventListener('input', function(){
      var v = input.value || '';
      var m = v.match(/^@+([a-z0-9_\-]+)?$/i); // only allow @user tokens
      if(!m){ hideSuggest(); return; }
      var q = (m[1]||'').toLowerCase();
      if(!q){ showSuggest(friends.slice(0,8)); return; }
      showSuggest(filterFriends(q));
    });
    input.addEventListener('keydown', function(e){
      if(e.key === 'Enter' || e.key === ',' ){
        var v = input.value||''; var m = v.match(/^@+([a-z0-9_\-]+)$/i); if(!m){ return; }
        e.preventDefault(); var q=m[1].toLowerCase(); var cand = filterFriends(q)[0]; if(!cand) return; selected.set(String(cand.id), cand); renderTokens(); hideSuggest(); input.value=''; updateSendEnabled();
      } else if(e.key === 'Backspace' && !input.value){
        // remove last
        var last = null; selected.forEach(function(v,k){ last = k; }); if(last){ selected.delete(last); renderTokens(); updateSendEnabled(); }
      }
    });

    // On open/close reset
    window.__rec_init = function(){ selected.clear(); renderTokens(); hideSuggest(); input.value=''; updateSendEnabled(); };

    sendBtn.addEventListener('click', function(){
      if(sendBtn.disabled) return;
      var modal = document.getElementById('recommendModal');
      var type = modal.getAttribute('data-content-type') || '';
      var id = modal.getAttribute('data-content-id') || '';
      var note = document.getElementById('recommendNote').value || '';
      var ids = Array.from(selected.keys()); if(!ids.length) return;
      sendBtn.disabled = true; sendBtn.textContent = 'Sending...';
      Promise.all(ids.map(function(rid){
        return fetch('/api/v1/recommendations/send', { method:'POST', headers:{ 'Content-Type':'application/json' }, body: JSON.stringify({ user_id: viewerId, user_key: userKey, receiver_id: rid, content_type: type, content_id: id, sender_note: note }) })
          .then(function(r){ return r.ok ? r.json() : null; }).catch(function(){ return null; });
      })).then(function(){
        sendBtn.textContent = 'Sent!';
        setTimeout(function(){ $('#recommendModal').modal('hide'); sendBtn.textContent='Send recommendation'; sendBtn.disabled=false; }, 700);
      }).catch(function(){ sendBtn.textContent='Send recommendation'; sendBtn.disabled=false; });
    });
  })();
})();
</script>
